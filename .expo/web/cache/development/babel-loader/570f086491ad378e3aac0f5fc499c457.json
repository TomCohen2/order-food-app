{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"marginLeft\"];\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Divider } from \"react-native-elements\";\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  menuItemStyle: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    margin: 20\n  },\n  titleStyle: {\n    fontSize: 19,\n    fontWeight: \"600\"\n  }\n});\nexport default function MenuItems(props) {\n  var dispatch = useDispatch();\n\n  var selectItem = function selectItem(item) {\n    return dispatch({\n      type: \"ADD_TO_CART\",\n      payload: item\n    });\n  };\n\n  return _jsx(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    children: foods.map(function (food, index) {\n      return _jsxs(View, {\n        children: [_jsxs(View, {\n          style: styles.menuItemStyle,\n          children: [_jsx(BouncyCheckbox, {\n            iconStyle: {\n              borderColor: \"lightgray\",\n              borderRadius: 0\n            },\n            fillColor: \"green\",\n            isChecked: isFoodInCart(food, cartItems),\n            onPress: function onPress(checkboxValue) {\n              return selectItem(food, checkboxValue);\n            }\n          }), _jsx(FoodInfo, {\n            food: food\n          }), _jsx(FoodImage, {\n            food: food\n          })]\n        }), _jsx(Divider, {\n          width: 0.5,\n          orientation: \"vertical\",\n          style: {\n            marginHorizontal: 20\n          }\n        })]\n      }, index);\n    })\n  });\n}\n\nvar FoodInfo = function FoodInfo(props) {\n  return _jsxs(View, {\n    style: {\n      width: 240,\n      justifyContent: \"space-evenly\"\n    },\n    children: [_jsx(Text, {\n      style: styles.titleStyle,\n      children: props.food.title\n    }), _jsx(Text, {\n      children: props.food.description\n    }), _jsx(Text, {\n      children: props.food.price\n    })]\n  });\n};\n\nvar FoodImage = function FoodImage(_ref) {\n  var marginLeft = _ref.marginLeft,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsx(View, {\n    children: _jsx(Image, {\n      source: {\n        uri: props.food.image\n      },\n      style: {\n        width: 100,\n        height: 100,\n        borderRadius: 8,\n        marginLeft: marginLeft\n      }\n    })\n  });\n};","map":{"version":3,"sources":["C:/Users/tomer/OneDrive/Desktop/uberEats/uber-eats-clone/components/restaurantDetail/MenuItem.js"],"names":["React","Divider","BouncyCheckbox","useDispatch","useSelector","styles","StyleSheet","create","menuItemStyle","flexDirection","justifyContent","margin","titleStyle","fontSize","fontWeight","MenuItems","props","dispatch","selectItem","item","type","payload","foods","map","food","index","borderColor","borderRadius","isFoodInCart","cartItems","checkboxValue","marginHorizontal","FoodInfo","width","title","description","price","FoodImage","marginLeft","uri","image","height"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View, Text, StyleSheet, Image, ScrollView } from \"react-native\";\r\nimport { Divider } from \"react-native-elements\";\r\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst styles = StyleSheet.create({\r\n  menuItemStyle: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    margin: 20,\r\n  },\r\n\r\n  titleStyle: {\r\n    fontSize: 19,\r\n    fontWeight: \"600\",\r\n  },\r\n});\r\n\r\nexport default function MenuItems(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const selectItem = (item) =>\r\n    dispatch({\r\n      type: \"ADD_TO_CART\",\r\n      payload: item,\r\n    });\r\n\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      {foods.map((food, index) => (\r\n        <View key={index}>\r\n          <View style={styles.menuItemStyle}>\r\n            <BouncyCheckbox\r\n              iconStyle={{ borderColor: \"lightgray\", borderRadius: 0 }}\r\n              fillColor=\"green\"\r\n              isChecked={isFoodInCart(food, cartItems)}\r\n              onPress={(checkboxValue) => selectItem(food, checkboxValue)}\r\n            />\r\n\r\n            <FoodInfo food={food} />\r\n            <FoodImage food={food} />\r\n          </View>\r\n          <Divider\r\n            width={0.5}\r\n            orientation=\"vertical\"\r\n            style={{ marginHorizontal: 20 }}\r\n          />\r\n        </View>\r\n      ))}\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst FoodInfo = (props) => (\r\n  <View style={{ width: 240, justifyContent: \"space-evenly\" }}>\r\n    <Text style={styles.titleStyle}>{props.food.title}</Text>\r\n    <Text>{props.food.description}</Text>\r\n    <Text>{props.food.price}</Text>\r\n  </View>\r\n);\r\n\r\nconst FoodImage = ({ marginLeft, ...props }) => (\r\n  <View>\r\n    <Image\r\n      source={{ uri: props.food.image }}\r\n      style={{\r\n        width: 100,\r\n        height: 100,\r\n        borderRadius: 8,\r\n        marginLeft: marginLeft,\r\n      }}\r\n    />\r\n  </View>\r\n);\r\n"]},"metadata":{},"sourceType":"module"}