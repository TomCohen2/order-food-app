{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { useSelector } from \"react-redux\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ViewCart(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.cartReducer.selectedItems;\n  }),\n      items = _useSelector.items,\n      restaurantName = _useSelector.restaurantName;\n\n  var total = items.map(function (item) {\n    return Number(item.price.replace(\"$\", \"\"));\n  }).reduce(function (prev, curr) {\n    return prev + curr;\n  }, 0);\n  var totalUSD = total.toLocaleString(\"en\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n  console.log(totalUSD);\n  return _jsx(_Fragment, {\n    children: total ? _jsx(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        position: \"absolute\",\n        justifyContent: \"center\",\n        bottom: 90,\n        zIndex: 999\n      },\n      children: _jsx(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          width: \"100%\"\n        },\n        children: _jsx(TouchableOpacity, {\n          style: {\n            marginTop: 20,\n            backgroundColor: \"black\",\n            alignItems: \"center\",\n            padding: 13,\n            borderRadius: 30,\n            width: 300,\n            position: \"relative\"\n          },\n          children: _jsxs(Text, {\n            style: {\n              color: \"white\",\n              fontSize: 20\n            },\n            children: [\"View Cart \", totalUSD]\n          })\n        })\n      })\n    }) : _jsx(_Fragment, {})\n  });\n}\n\nexport default ViewCart;","map":{"version":3,"sources":["C:/Users/tomer/OneDrive/Desktop/uberEats/uber-eats-clone/components/restaurantDetail/ViewCart.js"],"names":["React","useSelector","ViewCart","props","useState","modalVisible","setModalVisible","state","cartReducer","selectedItems","items","restaurantName","total","map","item","Number","price","replace","reduce","prev","curr","totalUSD","toLocaleString","style","currency","console","log","flex","alignItems","flexDirection","position","justifyContent","bottom","zIndex","width","marginTop","backgroundColor","padding","borderRadius","color","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,SAASC,WAAT,QAA4B,aAA5B;;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,kBAAwCC,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,eAArB;;AACA,qBAAkCL,WAAW,CAC3C,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,WAAN,CAAkBC,aAA7B;AAAA,GAD2C,CAA7C;AAAA,MAAQC,KAAR,gBAAQA,KAAR;AAAA,MAAeC,cAAf,gBAAeA,cAAf;;AAIA,MAAMC,KAAK,GAAGF,KAAK,CAChBG,GADW,CACP,UAACC,IAAD;AAAA,WAAUC,MAAM,CAACD,IAAI,CAACE,KAAL,CAAWC,OAAX,CAAmB,GAAnB,EAAwB,EAAxB,CAAD,CAAhB;AAAA,GADO,EAEXC,MAFW,CAEJ,UAACC,IAAD,EAAOC,IAAP;AAAA,WAAgBD,IAAI,GAAGC,IAAvB;AAAA,GAFI,EAEyB,CAFzB,CAAd;AAIA,MAAMC,QAAQ,GAAGT,KAAK,CAACU,cAAN,CAAqB,IAArB,EAA2B;AAC1CC,IAAAA,KAAK,EAAE,UADmC;AAE1CC,IAAAA,QAAQ,EAAE;AAFgC,GAA3B,CAAjB;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,SACE;AAAA,cACGT,KAAK,GACJ,KAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACLe,QAAAA,IAAI,EAAE,CADD;AAELC,QAAAA,UAAU,EAAE,QAFP;AAGLC,QAAAA,aAAa,EAAE,KAHV;AAILC,QAAAA,QAAQ,EAAE,UAJL;AAKLC,QAAAA,cAAc,EAAE,QALX;AAMLC,QAAAA,MAAM,EAAE,EANH;AAOLC,QAAAA,MAAM,EAAE;AAPH,OADT;AAAA,gBAWE,KAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLJ,UAAAA,aAAa,EAAE,KADV;AAELE,UAAAA,cAAc,EAAE,QAFX;AAGLG,UAAAA,KAAK,EAAE;AAHF,SADT;AAAA,kBAOE,KAAC,gBAAD;AACE,UAAA,KAAK,EAAE;AACLC,YAAAA,SAAS,EAAE,EADN;AAELC,YAAAA,eAAe,EAAE,OAFZ;AAGLR,YAAAA,UAAU,EAAE,QAHP;AAILS,YAAAA,OAAO,EAAE,EAJJ;AAKLC,YAAAA,YAAY,EAAE,EALT;AAMLJ,YAAAA,KAAK,EAAE,GANF;AAOLJ,YAAAA,QAAQ,EAAE;AAPL,WADT;AAAA,oBAWE,MAAC,IAAD;AACE,YAAA,KAAK,EAAE;AACLS,cAAAA,KAAK,EAAE,OADF;AAELC,cAAAA,QAAQ,EAAE;AAFL,aADT;AAAA,qCAManB,QANb;AAAA;AAXF;AAPF;AAXF,MADI,GA0CJ;AA3CJ,IADF;AAgDD;;AAED,eAAenB,QAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Image,\r\n  TouchableOpacity,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction ViewCart(props) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const { items, restaurantName } = useSelector(\r\n    (state) => state.cartReducer.selectedItems\r\n  );\r\n\r\n  const total = items\r\n    .map((item) => Number(item.price.replace(\"$\", \"\")))\r\n    .reduce((prev, curr) => prev + curr, 0);\r\n\r\n  const totalUSD = total.toLocaleString(\"en\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n  });\r\n\r\n  console.log(totalUSD);\r\n\r\n  return (\r\n    <>\r\n      {total ? (\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            flexDirection: \"row\",\r\n            position: \"absolute\",\r\n            justifyContent: \"center\",\r\n            bottom: 90,\r\n            zIndex: 999,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <TouchableOpacity\r\n              style={{\r\n                marginTop: 20,\r\n                backgroundColor: \"black\",\r\n                alignItems: \"center\",\r\n                padding: 13,\r\n                borderRadius: 30,\r\n                width: 300,\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  color: \"white\",\r\n                  fontSize: 20,\r\n                }}\r\n              >\r\n                View Cart {totalUSD}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewCart;\r\n"]},"metadata":{},"sourceType":"module"}